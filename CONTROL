/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package robotcontrol;

import java.awt.List;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author dmeg.rdfvis
 */
public class Control extends javax.swing.JFrame {

    //Esta bandera es para comenzar a grabar los movimientos del babas
    boolean ban;
    boolean conectado;
    ArrayList<Character> characterList;
    ArrayList<String> stringList;
    String incial;
    ArrayList<String> posicionesOriginales;
    ArrayList<String> movimientos;
    /**
     * Creates new form Control
     */
    public Control() {
        ban = false;
        conectado=false;
        characterList = new ArrayList<>();
        movimientos = new ArrayList<>();
        initComponents();
        incial="";
    }
private static Serial serial;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Control babas");
        jPanel1.add(jLabel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.GridLayout(11, 2));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Hombro");
        jPanel2.add(jLabel3);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Codo");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel2.add(jLabel4);

        jButton2.setText("Subir");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hombroSubir(evt);
            }
        });
        jPanel2.add(jButton2);

        jButton3.setText("Subir");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                codoSubir(evt);
            }
        });
        jPanel2.add(jButton3);

        jButton8.setText("Bajar");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hombroBajar(evt);
            }
        });
        jPanel2.add(jButton8);

        jButton9.setText("Bajar");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                codoBajar(evt);
            }
        });
        jPanel2.add(jButton9);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Pinza");
        jPanel2.add(jLabel5);
        jPanel2.add(jLabel6);

        jButton4.setText("Abrir");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pinzaAbrir(evt);
            }
        });
        jPanel2.add(jButton4);

        jButton5.setText("Cerrar");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pinzaCerrar(evt);
            }
        });
        jPanel2.add(jButton5);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Rotar");
        jPanel2.add(jLabel7);
        jPanel2.add(jLabel8);

        jButton6.setText("Izquierda");
        jButton6.setToolTipText("");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rotarIzquierda(evt);
            }
        });
        jPanel2.add(jButton6);

        jButton7.setText("Derecha");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rotarDerecha(evt);
            }
        });
        jPanel2.add(jButton7);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Mu√±eca");
        jPanel2.add(jLabel9);
        jPanel2.add(jLabel10);

        jButton13.setText("Izquierda");
        jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                munecaIzquierda(evt);
            }
        });
        jPanel2.add(jButton13);

        jButton12.setText("Derecha");
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                munecaDerecha(evt);
            }
        });
        jPanel2.add(jButton12);

        jButton10.setText("Secuencia 1");
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                secuencia1(evt);
            }
        });
        jPanel2.add(jButton10);

        jButton11.setText("Secuencia 2");
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                secuencia2(evt);
            }
        });
        jPanel2.add(jButton11);

        jButton14.setText("Grabar");
        jButton14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grabarSecuencia(evt);
            }
        });
        jPanel2.add(jButton14);

        jButton15.setText("Cargar secuencia");
        jButton15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cargarSecuencia(evt);
            }
        });
        jPanel2.add(jButton15);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel3.setLayout(new java.awt.GridLayout(1, 3));

        jLabel2.setText("Puerto");
        jPanel3.add(jLabel2);
        jPanel3.add(jTextField1);

        jButton1.setText("Conectar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                conectarPuerto(evt);
            }
        });
        jPanel3.add(jButton1);

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void conectarPuerto(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_conectarPuerto
        // TODO add your handling code here:
        
        if (jButton1.getText().equals("Conectar")) {
					serial = Serial.getInstance();
					serial.setPort(jTextField1.getText());
					if (serial.connect()) {
						jButton1.setText("Disconnect");
                                                System.out.println("Conectado");
						//disableEnableControlRobot(true);
                                                serial.write("g");
                                                System.out.println(serial.readPort());
                                                conectado=true;
					} else {
						JOptionPane.showMessageDialog(new JFrame(),
								"El puerto " + jTextField1.getText() + " no pudo ser abierto", "Dialog",
								JOptionPane.ERROR_MESSAGE);
					}

				} else {
					jButton1.setText("Connectar");
					serial.disconnect();
					//disableEnableControlRobot(false);
                                        System.out.println("Desconectado");
				}
        
    }//GEN-LAST:event_conectarPuerto

    private void hombroSubir(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hombroSubir
        // TODO add your handling code here:
        
        if(ban==true){
            characterList.add("w".charAt(0));
            serial.write("w");
        }else{
            serial.write("w");
        }
        
    }//GEN-LAST:event_hombroSubir

    private void hombroBajar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hombroBajar
        // TODO add your handling code here:
        
        if(ban==true){
            characterList.add("s".charAt(0));
            serial.write("s");
        }else{
            serial.write("s");
        }
    }//GEN-LAST:event_hombroBajar

    private void codoSubir(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_codoSubir
        // TODO add your handling code here:
        
        if(ban==true){
            characterList.add("q".charAt(0));
            serial.write("q");
        }else{
            serial.write("q");
        }
    }//GEN-LAST:event_codoSubir

    private void codoBajar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_codoBajar
        // TODO add your handling code here:
        
        if(ban==true){
            characterList.add("e".charAt(0));
            serial.write("e");
        }else{
            serial.write("e");
        }
    }//GEN-LAST:event_codoBajar

    private void pinzaAbrir(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pinzaAbrir
        // TODO add your handling code here:
        
        if(ban==true){
            characterList.add("p".charAt(0));
            serial.write("p");
        }else{
            serial.write("p");
        }
    }//GEN-LAST:event_pinzaAbrir

    private void pinzaCerrar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pinzaCerrar
        // TODO add your handling code here:
        
        if(ban==true){
            characterList.add("o".charAt(0));
            serial.write("o");
        }else{
            serial.write("o");
        }
    }//GEN-LAST:event_pinzaCerrar

    private void rotarIzquierda(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rotarIzquierda
        // TODO add your handling code here:

        
        if(ban==true){
            characterList.add("d".charAt(0));
            serial.write("d");
        }else{
            serial.write("d");
        }
        
    }//GEN-LAST:event_rotarIzquierda

    private void rotarDerecha(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rotarDerecha
        // TODO add your handling code here:

        
        if(ban==true){
            characterList.add("a".charAt(0));
            serial.write("a");
        }else{
        serial.write("a");
        }
    }//GEN-LAST:event_rotarDerecha

    private void secuencia1(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_secuencia1
        // TODO add your handling code here:

        
        if(ban==true){
            characterList.add("1".charAt(0));
            serial.write("1");
        }else{
            serial.write("1");
        }
    }//GEN-LAST:event_secuencia1

    private void secuencia2(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_secuencia2
        // TODO add your handling code here:

        
        if(ban==true){
            characterList.add("2".charAt(0));
            serial.write("2");
        }else{
            serial.write("2");
        }
    }//GEN-LAST:event_secuencia2

    private void munecaDerecha(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_munecaDerecha
        // TODO add your handling code here:
        
        if(ban==true){
            characterList.add("3".charAt(0));
            serial.write("3");
        }else{
            serial.write("3");
        }
    }//GEN-LAST:event_munecaDerecha

    private void munecaIzquierda(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_munecaIzquierda
        // TODO add your handling code here:
        
        if(ban==true){
            characterList.add("4".charAt(0));
            serial.write("4");
        }else{
            serial.write("4");
        }
    }//GEN-LAST:event_munecaIzquierda

    private void grabarSecuencia(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grabarSecuencia
        // TODO add your handling code here:
        if (jButton14.getText().equals("Grabar") && conectado==true) {
            ban = true;
            serial.write("g");
            try {
                TimeUnit.SECONDS.sleep(5);
            } catch (InterruptedException ex) {
                Logger.getLogger(Control.class.getName()).log(Level.SEVERE, null, ex);
            }
            incial = serial.readPort();
            System.out.println(incial);
            jButton14.setText("Parar");
            //System.out.println(serial.readPort()+"2do");
	} else {
            if (jButton14.getText().equals("Parar")&&conectado==true) {
                JFileChooser chooser = new JFileChooser();
                chooser.setCurrentDirectory(new File("/home/me/Documents"));
                int retval = chooser.showSaveDialog(this);
                try {
                    //entramos a la ventana de guardar                    
                    FileWriter fw = new FileWriter(chooser.getSelectedFile());
                    BufferedWriter output = new BufferedWriter(fw);    
                    //primero guardamos la lista de las posiciones
                    output.write(incial);
                    int sz = characterList.size();
                    for (int i = 0; i < sz; i++) {                        
                        output.write(characterList.get(i).toString());
                        output.newLine();
                    }
                    output.close();
                } catch (Exception ex) {
                    Logger.getLogger(Control.class.getName()).log(Level.SEVERE, null, ex);
                }
                
		} else {
                    JOptionPane.showMessageDialog(new JFrame(),
                        "Error " + jTextField1.getText()
                        + " no se pudo escribir el archivo", "Dialog",
			JOptionPane.ERROR_MESSAGE);
                        }
            
            //disableEnableControlRobot(false);
            System.out.println("Grabar proceso");
            jButton14.setText("Grabar");
        }
        
    }//GEN-LAST:event_grabarSecuencia

    private void cargarSecuencia(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cargarSecuencia
        // TODO add your handling code here:}
        //Tenemos que abrir el archivo con jfilechooser
        
        //tenemos que leer las primeras 5 lineas y enviarlas al robot por etapas
        // 1. Cada linea es enviada por tiempo al robot para ir ajustando... 3 seg
        // 2. En un primer serial.available entre 10 y 180 leer la cantidad y activar un contador del 1 al 5 con sus respectivos if, donde:
            // 2.1 al entrar en 1, significa que va a ajustar el hombro a la posicion que esta leyendo, el contador incrementa a 2
            // 2.2 al entrar en el serial.available de nuevo va a leer la cantidad y como es 2 el contador, se ira a asignar el valor entrrante al codo
            // 2.3 se hace la operacion hasta que llega a 5, donde termina
        // Una vez que terminan las 5 lineas, es tiempo de que por tiempo, se recorra la lista de movimientos, cada 2 segundos sera enviada una instruccion.
        posicionesOriginales = new ArrayList<String>();
        JFileChooser choice = new JFileChooser();
        int opcion = choice.showOpenDialog(this);
        String line;
        int counter=0;
        if(opcion == JFileChooser.APPROVE_OPTION){
            try {
                BufferedReader input = new BufferedReader(new FileReader(choice.getSelectedFile()));
                if(!input.ready()){
                    throw new IOException();
                }
                while((line=input.readLine())!=null){
                    if(counter<5){
                        posicionesOriginales.add(line);
                        System.out.println("Leyendo posicion original: " + line+ " en linea "+ counter);
                        counter++;
                    }else{
                        movimientos.add(line);
                        System.out.println("Leyendo movimientos: " + line+ " en linea "+ counter);
                        counter++;
                    }  
                }
                input.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Control.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Control.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                //primero envio los elementos que estan en posicionesOriginales
                TimeUnit.SECONDS.sleep(5);
            } catch (InterruptedException ex) {
                Logger.getLogger(Control.class.getName()).log(Level.SEVERE, null, ex);
            }
             try {
                
                int sz = posicionesOriginales.size();
                for (int i = 0; i < sz; i++) {
                    serial.write(posicionesOriginales.get(i).toString());
                    TimeUnit.SECONDS.sleep(3);
                    }
            } catch (InterruptedException ex) {
                Logger.getLogger(Control.class.getName()).log(Level.SEVERE, null, ex);
            }
             
            try {
                
                int sz = movimientos.size();
                for (int i = 0; i < sz; i++) {
                    serial.write(movimientos.get(i).toString());
                    TimeUnit.SECONDS.sleep(3);
                    }
                JOptionPane.showMessageDialog(null, "Secuencia terminada");
            } catch (InterruptedException ex) {
                Logger.getLogger(Control.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_cargarSecuencia

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
